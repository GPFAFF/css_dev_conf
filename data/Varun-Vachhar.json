{
  "data":
    {
      "nameDisplay": "@winkerVSbecks",
      "twitter": "https://twitter.com/winkerVSbecks",
      "title": "Slaying the Webpack Dragon",
      "slides": "tiny.cc/webpack-dragon",
      "picture": "https://pbs.twimg.com/profile_images/458803930713972736/dZevbKSe_400x400.png",
      "info": [
        {
          "headline": "Bundling.",
          "points": [
            {
              "topic": "Grabs multiple module.js and transforms them to bundle."
            },
            {
              "topic": "Task Runners - Grunt, Gulp, etc. Can be used at build tools."
            },
            {
              "topic": "In Webpack. Everything is a module. Parse imports and build dependency graph to maintain order and optimization."
            },
            {
              "topic": "Next steps, install webpack. Can use it as a CLI."
            }
          ]
        },
        {
          "headline": "Four Core Concepts.",
          "points": [
            {
              "topic": "Entry - Starting point of the app."
            },
            {
              "topic": "Output - telling webpack where to put it, and what to call it."
            },
            {
              "topic": "Loaders - Transform files into modules."
            },
            {
              "topic": "Rules for loading modules - build with loaders. Specify rules. Test: your specific extension, what to include: which part of application are you transpiling/compiling.  Use: what loader to use."
            },
            {
              "topic": "Loaders can be chained. They read right to left."
            }
          ]
        },
        {
          "headline": "Plugins",
          "points": [
            {
              "topic": "They customize or enhance the build process in a variety of ways."
            },
            {
              "topic": "Style loader can't cache css, one large HTTP request. Inline the css in the bundle. We can use extractTextPlugin instead to remove the css."
            },
            {
              "topic": "Code splitting, html css and main chunk. Then lazy load as the user navigates to other chunks asynchrnously."
            },
            {
              "topic": "Through tweaking (code splitting, minification, extracting) you can significantly reduce bundle size."
            }
          ]
        },
        {
          "headline": "Webpack Fatigue",
          "points": [
            {
              "topic": "Requires some Node.JS knowledge."
            },
            {
              "topic": "Requires knowledge of ES6 Modules."
            },
            {
              "topic": "API has a large surface area."
            },
            {
              "topic": "Environment dependant configs."
            },
            {
              "topic": "Inheriting configs written by others."
            }
          ]
        }
      ]
    }
}